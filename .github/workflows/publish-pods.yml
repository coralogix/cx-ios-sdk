name: Publish CocoaPods

permissions:
  contents: read

on:
  release:
    types: [published]

jobs:
  publish-pods:
    runs-on: macos-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make script executable
        run: chmod +x ./verify_podspec_versions.sh

      - name: Verify release tag matches podspec versions
        env:
          # Prefer release tag; fallback to ref_name for tag pushes
          TAG_RAW: ${{ github.event.release.tag_name || github.ref_name }}
        run: |
          set -euo pipefail
          echo "Using tag: ${TAG_RAW}"
          ./verify_podspec_versions.sh "${TAG_RAW}"

      # Set up Ruby (required for CocoaPods)
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2' # Specify a Ruby version compatible with CocoaPods
          bundler-cache: true

      # Install CocoaPods
      - name: Install CocoaPods
        run: gem install cocoapods

      # Set up CocoaPods Trunk authentication
      - name: Authenticate with CocoaPods Trunk
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: |
           set -euo pipefail
           echo "Validating CocoaPods Trunk token..."
           pod trunk me || { echo "Invalid or missing COCOAPODS_TRUNK_TOKEN"; exit 1; }

      # Push CoralogixInternal.podspec
      - name: Push CoralogixInternal.podspec
        run: |
          echo "üöÄ Pushing CoralogixInternal.podspec..."
          pod trunk push CoralogixInternal.podspec --allow-warnings --verbose
          echo "‚úÖ CoralogixInternal.podspec pushed!"

      # Clear CocoaPods cache
      - name: Clear CocoaPods cache
        run: |
          echo "üßπ Clearing CocoaPods cache..."
          pod cache clean --all
          echo "‚úÖ Cache cleared."

      # Wait for CoralogixInternal availability
      - name: Wait for CoralogixInternal availability
        run: |
          set -euo pipefail
          VERSION="$(grep -E 's\.version\s*=' CoralogixInternal.podspec | head -1 | sed -E 's/.*"([^"]+)".*/\1/')"
          if [ -z "${VERSION:-}" ]; then
            echo "‚ùå Could not parse version from CoralogixInternal.podspec"
            exit 1
          fi
          echo "‚è≥ Waiting for CoralogixInternal $VERSION to appear on Trunk..."
          timeout=900
          elapsed=0
          until pod trunk info CoralogixInternal | grep -q " - $VERSION$"; do
            if [ "$elapsed" -ge "$timeout" ]; then
              echo "‚ùå Timeout: CoralogixInternal $VERSION not available after $timeout seconds."
              exit 1
            fi
            echo "‚è≥ Not yet available, waiting 30 seconds..."
            sleep 30
            elapsed=$((elapsed + 30))
          done
          echo "‚úÖ CoralogixInternal $VERSION is now available on Trunk!"

      # Push SessionReplay.podspec
      - name: Push SessionReplay.podspec
        run: |
          echo "üöÄ Pushing SessionReplay.podspec..."
          pod trunk push SessionReplay.podspec --allow-warnings --verbose
          echo "‚úÖ SessionReplay.podspec pushed!"

      # Push Coralogix.podspec
      - name: Push Coralogix.podspec
        run: |
          echo "üöÄ Pushing Coralogix.podspec..."
          pod trunk push Coralogix.podspec --allow-warnings --verbose
          echo "üéâ Coralogix.podspec pushed successfully! üéâ"